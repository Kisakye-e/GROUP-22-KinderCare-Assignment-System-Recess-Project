#include<stdio.h>
#include<stdlib.h>
void enter();
char matrix[28]={'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','1','2'};
char matrix_a[29]={' ','*',' ',' ','*','*','*',' ','*',' ','*',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '};
char matrix_b[29]={'*','*','*','*','*',' ',' ','*','*','*','*',' ','*','*','*',' ','*',' ',' ','*','*',' ',' ','*','*','*','*','*',' '};
char matrix_c[29]={' ',' ','*','*',' ','*',' ',' ','*',' ',' ',' ','*',' ',' ',' ','*',' ',' ',' ',' ','*',' ',' ',' ',' ','*','*',' '};
char matrix_d[29]={'*',' ',' ',' ','*','*',' ',' ','*',' ','*',' ','*',' ',' ','*','*',' ',' ','*','*','*','*',' ',' ',' ',' ',' ',' '};
char matrix_e[29]={'*','*','*','*','*',' ',' ',' ','*',' ',' ',' ','*','*','*','*','*',' ',' ',' ','*',' ',' ',' ','*','*','*','*',' '};
char matrix_f[29]={'*','*','*','*','*',' ',' ',' ','*',' ',' ',' ','*','*','*','*','*',' ',' ',' ','*',' ',' ',' ','*',' ',' ',' ',' '};
char matrix_g[29]={' ',' ','*','*',' ','*',' ',' ','*',' ',' ',' ','*',' ',' ',' ','*',' ','*','*',' ','*',' ','*',' ',' ','*','*',' '};
char matrix_h[29]={'*',' ',' ','*','*',' ',' ','*','*',' ',' ','*','*','*','*','*','*',' ',' ','*','*',' ',' ','*','*',' ',' ','*',' '};
char matrix_i[29]={'*','*','*',' ',' ','*',' ',' ',' ','*',' ',' ',' ','*',' ',' ',' ','*',' ',' ',' ','*',' ',' ','*','*','*',' ',' '};
char matrix_j[29]={'*','*','*',' ',' ','*',' ',' ',' ','*',' ',' ',' ','*',' ',' ','*','*',' ',' ','*','*',' ',' ','*','*',' ',' ',' '};
char matrix_k[29]={'*',' ',' ','*','*',' ','*',' ','*','*',' ',' ','*',' ',' ',' ','*','*',' ',' ','*',' ','*',' ','*',' ',' ','*',' '};
char matrix_l[29]={'*',' ',' ',' ','*',' ',' ',' ','*',' ',' ',' ','*',' ',' ',' ','*',' ',' ',' ','*',' ',' ',' ','*','*','*','*',' '};

char matrix_entered[29];
int ch;

int main()
{

   char position;

  //printf("Enter number of characters:");
  //scanf("%d",&ch);


  // for(int i=0;i<ch;++i)

     // char letter;


   for(int i=0;i<29;++i)
   {

   enter();

   printf("Enter 0 or 1 at position %d:",matrix[i]);
   scanf("%c",&position);

   if(position == '0')

   {
       matrix[i]=' ';
       matrix_entered[i]=' ';


   }

   else if(position=='1')
   {
       matrix[i]='*';
       matrix_entered[i]='*';


   }
   else
   {
       printf("invalid");
       --i;

   }

   }


//if(ch=='c')

int k=0;
for(int i=0;i<29;++i)
{


if(matrix_c[i]==matrix_entered[i])
{

    k++;

}

else
    {
        k+=0;
    }



}



printf("%d",k);



return 0;
}

void enter()
{



   system("cls");

   printf(" _____ _____ _____ _____\n");
   printf("|  %c  |  %c  |  %c  |  %c  |\n",matrix[0],matrix[1],matrix[2],matrix[3]);
   printf("|_____|_____|_____|_____|\n");
   printf("|  %c  |  %c  |  %c  |  %c  |\n",matrix[4],matrix[5],matrix[6],matrix[7]);
   printf("|_____|_____|_____|_____|\n");
   printf("|  %c  |  %c  |  %c  |  %c  |\n",matrix[8],matrix[9],matrix[10],matrix[11]);
   printf("|_____|_____|_____|_____|\n");
   printf("|  %c  |  %c  |   %c |   %c |\n",matrix[12],matrix[13],matrix[14],matrix[15]);
   printf("|_____|_____|_____|_____|\n");
   printf("|  %c  |   %c |   %c |   %c |\n",matrix[16],matrix[17],matrix[18],matrix[19]);
   printf("|_____|_____|_____|_____|\n");
   printf("|  %c  |   %c |   %c |   %c |\n",matrix[20],matrix[21],matrix[22],matrix[23]);
   printf("|_____|_____|_____|_____|\n");
   printf("|  %c  |   %c |   %c |  %c  |\n",matrix[24],matrix[25],matrix[26],matrix[27]);
   printf("|_____|_____|_____|_____|\n");

}


